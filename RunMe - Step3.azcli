#!/bin/bash
ArcWinVMname=$(az deployment sub show --name "CoreDeploy-$Seed" --query properties.outputs.winVMsName.value[0].name -o tsv)
ArcSqlVMname=$(az deployment sub show --name "CoreDeploy-$Seed" --query properties.outputs.sqlVMsName.value[0].name -o tsv)
#$AKSName=az deployment sub show --name "CoreDeploy-$Seed" --query properties.outputs.aksName.value -o tsv
# get AKS cluster name
#AksName=$(az aks show --resource-group "$Seed-Demo" --name "AKS-$Seed" --query name -o tsv)
ArcWinlist="[\"$ArcWinVMname\"]"
ArcSqllist="[\"$ArcSqlVMname\"]"

StorageAccountName="gdrrepo3423"
ContainerName="iso"
BlobName="SQLServer2022-x64-ENU.iso"

# Retrieve the System Managed identity for the Arc enabled VM
ArcManagedIdentity=$(az connectedmachine show --resource-group $Seed-Demo --name $ArcSqlVMname --query identity.principalId --output tsv)

# Assign the 'Storage Blob Data Reader' to the Service Principal to allow it to download the SQLServer ISO
az role assignment create --assignee $ArcManagedIdentity \
     --role 'Storage Blob Data Reader' \
     --scope "//subscriptions/$MySubscriptionId/resourceGroups/GdrRepo/providers/Microsoft.Storage/storageAccounts/$StorageAccountName/blobServices/default/containers/$ContainerName"

# Allow installing extensions without prompt
az config set extension.use_dynamic_install=yes_without_prompt

echo "powershell Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/gderossilive/GuestConfiguration/refs/heads/main/Files/IsoSetup.ps1' -OutFile 'c:\\windows\\\\temp\\IsoSetup.ps1'; powershell -File 'c:\\windows\\\\temp\\IsoSetup.ps1' -servicePrincipalClientId $ArcSp_id -servicePrincipalSecret $ArcSp_pwd -TenantId $MyTenantId -StorageAccountName $StorageAccountName -ContainerName $ContainerName -BlobName $BlobName -Force "
# Use the CustomScript extension on the Arc enabled VM to setup the environment
az connectedmachine extension create \
     --machine-name $ArcSqlVMname \
     --location $location \
     --name 'CustomScriptExtension' \
     --resource-group "$Seed-Demo" \
     --type "CustomScriptExtension" \
     --publisher "Microsoft.Compute" \
     --settings "{\"commandToExecute\":\"powershell Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/gderossilive/GuestConfiguration/refs/heads/main/Files/IsoSetup.ps1' -OutFile 'c:\\windows\\\\temp\\IsoSetup.ps1'; powershell -File c:\\windows\\\temp\\IsoSetup.ps1 -servicePrincipalClientId $ArcSp_id -servicePrincipalSecret $ArcSp_pwd -TenantId $MyTenantId -StorageAccountName $StorageAccountName -ContainerName $ContainerName -BlobName $BlobName -Force \"}" \
     --enable-auto-upgrade true

# setup the GuestConfiguration extension on the Arc enabled VM to install SQL Server
az deployment group create \
	--name "SqlDscSetup-$Seed" \
	 --resource-group "$Seed-Demo" \
	 --template-file './src/SQLInstallDSC.bicep' \
	 --parameters \
		  sqlServerName=$ArcSqlVMname \
		  version='1.3' \
		  contentHash='ac94b0f0911522bb5bd83bb5c665acedb93b03714159cfd207e812c2556e36e4'


# ------------------ END OF FILE ------------------
az connectedmachine extension create \
	--machine-name $ArcWinVMname \
	--location $location \
	--name 'AzureMonitorWindowsAgent' \
	--resource-group "$Seed-Demo" \
	--type "AzureMonitorWindowsAgent" \
	--publisher "Microsoft.Azure.Monitor" \
	--enable-auto-upgrade true

# setup the dependency agent on the Arc enabled VM
az connectedmachine extension create \
     --machine-name $ArcWinVMname \
     --location $location \
     --name 'DependencyAgentWindows' \
     --resource-group "$Seed-Demo" \
     --type "DependencyAgentWindows" \
     --publisher "Microsoft.Azure.Monitoring.DependencyAgent" \
     --settings "{\"enableAMA\": \"true\"}" \
     --enable-auto-upgrade true

# setup the Best Practice Assessment Platform on the Arc enabled VM
az connectedmachine extension create \
	--machine-name $ArcWinVMname \
	--location $location \
	--name 'assessmentplatform' \
	--resource-group "$Seed-Demo" \
	--type "assessmentplatform" \
	--publisher "microsoft.serviceshub" \
	--enable-auto-upgrade true

# setup the Windows Server Best Practice Assessment on the Arc enabled VM
az connectedmachine extension create \
	--machine-name $ArcWinVMname \
	--location $location \
	--name 'windowsserverassessment' \
	--resource-group "$Seed-Demo" \
	--type "windowsserverassessment" \
	--publisher "microsoft.serviceshub" \
	--enable-auto-upgrade true
     --settings "{\"isEnabled\": \"true\",\"addTaskOnInstallRequested\": \"true\",\"triggerRequested\": \"true\",\"triggerServerName\": \"$ArcWinVMname\",\"triggerLogAnalyticsWorkspaceFullId\": \"$LawResourceId\",\"triggerLogAnalyticsWorkspaceId\": \"$LawId\",\"triggerLogAnalyticsWorkspaceName\": \"$LAWname\"}" \

# assess the patches on the Arc enabled VM
az connectedmachine assess-patches -g "$Seed-Demo" -n $ArcWinVMname