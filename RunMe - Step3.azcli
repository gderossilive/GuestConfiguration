#!/bin/bash
# Retrieve the vm names
ArcWinVMname=$(az deployment sub show --name "CoreDeploy-$Seed" --query properties.outputs.winVMsName.value[0].name -o tsv)
ArcSqlVMname=$(az deployment sub show --name "CoreDeploy-$Seed" --query properties.outputs.sqlVMsName.value[0].name -o tsv)
# build the list of VMs to be setup
ArcWinlist="[\"$ArcWinVMname\"]"
ArcSqllist="[\"$ArcSqlVMname\"]"

# Set the storage account and blob details where to download the SQLServer 2022 ISO
StorageAccountName="gdrrepo3423"
ContainerName="iso"
BlobName="SQLServer2022-x64-ENU.iso"

# Retrieve the System Managed identity for the Arc enabled VM
ArcVmManagedIdentity=$(az connectedmachine show --resource-group $Seed-Demo --name $ArcSqlVMname --query identity.principalId --output tsv)

# Assign the 'Storage Blob Data Reader' to the Service Principal to allow it to download the SQLServer ISO
az role assignment create --assignee $ArcVmManagedIdentity \
     --role 'Storage Blob Data Reader' \
     --scope "//subscriptions/$MySubscriptionId/resourceGroups/GdrRepo/providers/Microsoft.Storage/storageAccounts/$StorageAccountName/"

# Allow installing extensions without prompt
az config set extension.use_dynamic_install=yes_without_prompt

# Use the CustomScript extension on the Arc enabled VM to download the SQLServer ISO and extract it in the C:\SQLServer2022 folder 
az connectedmachine extension create \
     --machine-name $ArcSqlVMname \
     --location $location \
     --name 'CustomScriptExtension' \
     --resource-group "$Seed-Demo" \
     --type "CustomScriptExtension" \
     --publisher "Microsoft.Compute" \
     --settings "{\"commandToExecute\":\"powershell Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/gderossilive/GuestConfiguration/refs/heads/main/Files/IsoSetup.ps1' -OutFile 'c:\\windows\\\temp\\IsoSetup.ps1' \"}" \
     --enable-auto-upgrade true

# echo "powershell -File 'c:\\windows\\\temp\\IsoSetup.ps1' -servicePrincipalClientId $ArcSp_id -servicePrincipalSecret $ArcSp_pwd -TenantId $MyTenantId -StorageAccountName $StorageAccountName -ContainerName $ContainerName -BlobName $BlobName -Force "
az connectedmachine extension create \
     --machine-name $ArcSqlVMname \
     --location $location \
     --name 'CustomScriptExtension' \
     --resource-group "$Seed-Demo" \
     --type "CustomScriptExtension" \
     --publisher "Microsoft.Compute" \
     --settings "{\"commandToExecute\":\"powershell -File c:\\windows\\\temp\\IsoSetup.ps1 -servicePrincipalClientId $ArcSp_id -servicePrincipalSecret $ArcSp_pwd -TenantId $MyTenantId -StorageAccountName $StorageAccountName -ContainerName $ContainerName -BlobName $BlobName -Force \"}" \
     --enable-auto-upgrade true

# Use the CustomScript extension on the Arc enabled VM to install SQL Server
az connectedmachine extension create \
     --machine-name $ArcSqlVMname \
     --location $location \
     --name 'CustomScriptExtension' \
     --resource-group "$Seed-Demo" \
     --type "CustomScriptExtension" \
     --publisher "Microsoft.Compute" \
     --settings "{\"commandToExecute\":\"powershell Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/gderossilive/GuestConfiguration/refs/heads/main/Files/SqlServerSetupDSC.ps1' -OutFile 'c:\\windows\\\temp\\SqlServerSetupDSC.ps1'; powershell -File c:\\windows\\\temp\\SqlServerSetupDSC.ps1  -Force \"}" \
     --enable-auto-upgrade true

# setup the GuestConfiguration extension on the Arc enabled VM to install SQL Server
az deployment group create \
	--name "SqlDscSetup-$Seed" \
	 --resource-group "$Seed-Demo" \
	 --template-file './src/SQLInstallDSC.bicep' \
	 --parameters \
		  sqlServerName=$ArcSqlVMname \
		  version='1.3' \
		  contentHash='ac94b0f0911522bb5bd83bb5c665acedb93b03714159cfd207e812c2556e36e4'